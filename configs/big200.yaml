train:
  mode: "torch" # torch or jax
  model: "sovits"
  seed: 1234
  epochs: 1000000
  learning_rate: 1e-5
  betas: [0.9, 0.99]
  lr_decay: 0.999875
  total_steps: 30 # base on dataset size
  eps: 1e-9
  batch_size: 128
  c_stft: 9
  c_mel: 1.
  c_kl: 0.2
  port: 8001
  pretrain: ""
#############################
data: 
  training_files: "files/train.txt"
  validation_files: "files/valid.txt"
  segment_size: 8000  # WARNING: base on hop_length
  max_wav_value: 32768.0
  sampling_rate: 44100
  filter_length: 2048
  hop_length: 512
  win_length: 2048
  mel_channels: 100
  mel_fmin: 50.0
  mel_fmax: 16000.0
  f0_extractor: 'crepe' # 'parselmouth', 'dio', 'harvest', 'crepe', 'rmvpe' or 'fcpe'
  f0_min: 65 # about C2
  f0_max: 800 # about G5

  block_size: 512 # Equal to hop_length
  duration: 2 # Audio duration during training, must be less than the duration of the shortest audio clip
  encoder: 'contentvec768l12' # 'hubertsoft', 'hubertbase', 'hubertbase768', 'contentvec', 'contentvec768' or 'contentvec768l12' or 'cnhubertsoftfish'
  cnhubertsoft_gate: 10 # only use with cnhubertsoftfish
  encoder_sample_rate: 16000
  encoder_hop_size: 320
  encoder_out_channels: 768 # 256 if using 'hubertsoft'
  encoder_ckpt: pretrain/contentvec/checkpoint_best_legacy_500.pt
  units_forced_mode: 'nearest' # Recommended 'nearest',experiment 'rfa512to441' and 'rfa441to512' ; 'left'  only use for compatible with history code
  volume_noise: 0 # if not 0 ,add noise for volume in train ;;;;EXPERIMENTAL FUNCTION, NOT RECOMMENDED FOR USE;;;;
  train_path: data/train # Create a folder named "audio" under this path and put the audio clip in it
  valid_path: data/val # Create a folder named "audio" under this path and put the audio clip in it
  extensions: # List of extension included in the data collection
    - wav
#############################
log:
  info_interval: 100
  eval_interval: 30
  save_interval: 30
  num_audio: 6
  max_to_keep : 10
  pth_dir: 'chkpt'
  log_dir: 'logs'
model_diff:
  n_layers: 40
  n_chans: 512
  n_hidden: 512
  use_pitch_aug: true  
  n_spk: 1 # max number of different speakers
model_naive:
  n_layers: 6
  n_chans: 512
  n_hidden: 512
  use_pitch_aug: true  
  n_spk: 1 # max number of different speakers
model:
  use_pitch_aug: false  
  n_spk: 1 # max number of different speakers
Gaussian: 
  sample_shape: [128,172]
  loss: 'l1'
  timesteps: 1000
  sampling_timesteps: 1000
  objective: 'predict_noise'
  beta_schedule: 'linear'
  #min_snr_loss_weight: True,
  #scale_shift: True,
  scale_factor: 1
  noise_type: 'normal'
  self_condition: True
shallow:
  k_step_max: 200